<?xml version="1.0" encoding="UTF-8"?>
<!--
Schema content Version: 1.0
file format version: 1.0
VIST version: VIST 0.1.18
Copyright (c) 2008-2010 by HUAWEI TECHNOLOGIES.
All rights reserved.
-->
<xs:schema xmlns="http://www.huawei.com/netconf/vrp" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.huawei.com/netconf/vrp" elementFormDefault="qualified" attributeFormDefault="unqualified" xml:lang="en">
    <xs:annotation>
        <xs:appinfo>
            <formatVersion>1.0</formatVersion>
            <contentVersion>1.0</contentVersion>
        </xs:appinfo>
    </xs:annotation>
    <xs:include schemaLocation="pub_attribute.xsd"/>
    <xs:include schemaLocation="pub_type.xsd"/>
    <xs:include schemaLocation="bgp_bgpcomm_type.xsd"/>
    <xs:complexType name="bgp_bgpcomm_bgpcomm_type">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="bgpSite" type="bgp_bgpcomm_bgpSite_type"/>
            <xs:element name="bgpConfedPeerAss" type="bgp_bgpcomm_confedPeerAss_type"/>
            <xs:element name="bgpVrfs" type="bgp_bgpcomm_bgpVrfs_type"/>
        </xs:choice>
        <xs:attributeGroup ref="versionAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpSite_type">
        <xs:annotation>
            <xs:appinfo>
                <autoDeleteChildren>true</autoDeleteChildren>
            </xs:appinfo>
            <xs:documentation>BGP global class for VirtualRouteï¼ŒBGP service</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="bgpVersion">
                <xs:annotation>
                    <xs:documentation>BGP Protocol version.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte"/>
                </xs:simpleType>
            </xs:element>
            <xs:element name="bgpEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Enable BGP and enter the BGP view</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="asNumber" default="0">
                <xs:annotation>
                    <xs:documentation>Specifies the local AS number.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="11"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="gracefulRestart" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Graceful restart capability flag</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="timeWaitForRib" default="600">
                <xs:annotation>
                    <xs:documentation>Specifies the time for waiting for the End-Of-RIB flag. It is an integer ranging from 3 to 3000, in seconds. By default, the value is 600 seconds.
                                        </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="3"/>
                        <xs:maxInclusive value="3000"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="asPathLimit">
                <xs:annotation>
                    <xs:documentation>Limit the number of  AS numbers in the AS_Path.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="2000"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="checkFirstAs" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>Check first AS in as_path of update messages from ebgp peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="confedIdNumber">
                <xs:annotation>
                    <xs:documentation>specifies the number of the AS that has multiple sub-ASs. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="11"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="confedNonstanded" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the confederation nonstandard command, you can configure routers to be compatible with the nonstandard AS confederation.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="bgpRidAutoSel" type="xs:boolean" default="false">
               <xs:annotation>
                    <xs:documentation>Select router-id automatically.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
               </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_confedPeerAss_type">
        <xs:annotation>
            <xs:documentation>confederation as-number</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="bgpConfedPeerAs" minOccurs="0" maxOccurs="32">
                <xs:complexType>
                    <xs:complexContent>
                        <xs:extension base="bgp_bgpcomm_confedPeerAs_type"/>
                    </xs:complexContent>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_confedPeerAs_type">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="confedPeerAsNum">
                <xs:annotation>
                    <xs:documentation>An autonomous system that is contained in a given AS confederation</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="11"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="operation"/>
        <xs:attribute name="difference"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpVrfs_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="bgpVrf" type="bgp_bgpcomm_bgpVrf_type" maxOccurs="4096"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpVrf_type">
        <xs:annotation>
            <xs:documentation>BGP instance class</xs:documentation>
            <xs:appinfo>
                <autoDeleteChildren>true</autoDeleteChildren>
            </xs:appinfo>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="vrfName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the VPN instance. It is a string of 1 to 31 case-sensitive characters.</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="bgp_bgpcomm_bgpVrf_vrfName_Type">
                            <xs:attribute name="vrfId" type="xs:string"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="vrfRidAutoSel" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Select router-id automatically.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routerId" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>Specifies the ID for the router. The router ID must be unique for each router in an AS. By default, when the router does not have any interface, the router ID in RM is 0.0.0.0.</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="effectRouterId" type="ipv4Address" default="0.0.0.0">
                <xs:annotation>
                    <xs:documentation>The effect router id</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="keepaliveTime" default="60">
                <xs:annotation>
                    <xs:documentation>Specifies the Keepalive interval</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="21845"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="holdTime" default="180">
                <xs:annotation>
                    <xs:documentation>Specifies the Holdtime interval</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="connRetryTime" default="32">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Value of connect-retry timer(seconds).</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="ebgpIfSensitive" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The capability of reseting the EBGP session that is directly connected on the interface whose state becomes Down immediately </xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultAfType" type="bgpcommVrfPrefixType" default="ipv4uni">
                <xs:annotation>
                    <xs:documentation>The default address family of instance</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="bgpPeerGroups" type="bgp_bgpcomm_bgpPeerGroups_type"/>
            <xs:element name="bgpPeers" type="bgp_bgpcomm_bgpPeers_type"/>
            <xs:element name="bgpVrfAFs" type="bgp_bgpcomm_bgpVrfAFs_type"/>
            <xs:element name="bgpPeerBfdSessionInfos" type="bgp_bgpcomm_bgpPeerBfdSessionInfos_type"/>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeer_type">
        <xs:annotation>
            <xs:documentation>BGP Peer configure class</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="peerAddr" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>The nerighbor address</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="groupName" type="bgp_bgpcomm_bgpPeerGroup_groupName_Type">
                <xs:annotation>
                    <xs:documentation>peerGroupName</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="remoteAs">
                <xs:annotation>
                    <xs:documentation>Specifies the AS number of the peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="11"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="description">
                <xs:annotation>
                    <xs:documentation>specifies the description. The description is a string of letters or figures. The value ranges from 1 to 80 characters without spaces.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="80"/>
                        <xs:pattern value="([^?]*)"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="fakeAs">
                <xs:annotation>
                    <xs:documentation>Specifies the fake AS number of the peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="11"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="dualAs" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>The capability flag of dual-as</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="conventional" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>The capability flag of conventional</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeRefresh" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The capability flag of route refresh</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="fourByteAs" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The capabilityflag of fourByteAs</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="isIgnore" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Forbid a router to set up the session with the spcefied peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localIfName" type="ifName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the source interface through which the BGP packets are sent, and the source address with which the BGP connection is established.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localIfAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Specifies the ip address of the source interface through which the BGP packets are sent, and the source address with which the BGP connection is established.</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ebgpMaxHop" default="1">
                <xs:annotation>
                    <xs:documentation>Configure BGP to set up the EBGP connection with the peer on the indirect network.specifies the maximum number of hops. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="validTtlHops">
                <xs:annotation>
                    <xs:documentation>Specifies the number of TTL hops to be checked. It is an integer ranging from 1 to 255. The default value is 255.If the value is configured as hops, the valid TTL range of the detected packet is [255 - hops + 1, 255].</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="connectMode" type="bgpcommPeerConnectMode">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Specifies the connect mode with the specified peer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="isLogChange" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The flag of enable BGP to log any session state and event for the specific peer or the specified peer group.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="pswdType" type="bgpcommPasswordType" default="null">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Specifies the password type with the specified peer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="pswdCipherText" type="passwordExtend">
                <xs:annotation>
                    <xs:documentation>Specifies the password in the text. It is a string of 1 to 255 characters without any space.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="keepAliveTime" default="60">
                <xs:annotation>
                    <xs:documentation>Specifies the Keepalive interval for a peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="21845"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="holdTime" default="180">
                <xs:annotation>
                    <xs:documentation>Specifies the Holdtime interval for a peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="keyChainName">
                <xs:annotation>
                    <xs:documentation>The keyChain name</xs:documentation>
                    <xs:appinfo>
                        <key>false</key>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="bgp_bgpcomm_bgpKeyChain_keyChain_Type"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="trackingEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Fast detect the unreachable destined for the peer and reset the session.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="trackDelayTime" default="0">
                <xs:annotation>
                    <xs:documentation>Specify the delay to reset the session, in seconds.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="connRetryTime" default="32">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Value of connect-retry timer(seconds).</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="peerLogInfos" type="bgp_bgpcomm_peerLogInfos_type"/>
            <xs:element name="peerBfd" type="bgp_bgpcomm_peerBfd_type"/>
        </xs:choice>
        <xs:attribute name="operation" type="editOperation" use="optional"/>
        <xs:attribute name="difference" type="configDifference" use="optional"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeers_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="bgpPeer" type="bgp_bgpcomm_bgpPeer_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerAFs_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerAF" type="bgp_bgpcomm_peerAF_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerAF_type">
        <xs:annotation>
            <xs:documentation> Peer Configure class for ipv4 unicast</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="remoteAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Specifies the IP address of the peer.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="peerGroupName" type="bgp_bgpcomm_bgpPeerGroup_groupName_Type">
                <xs:annotation>
                    <xs:documentation>peerGroupName</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="labelRouteCapability" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer label-route-capability command, you can enable BGP to send labeled routes to the specified peer or the peer group.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="checkTunnelReachable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Checks whether the tunnel is reachable when an imported route is advertised to a BGP peer as a labeled route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="advertiseCommunity" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer advertise-community command, you can configure routers to advertise the community attributes to a peer. By default, the community attribute is not advertised to any peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="advertiseExtCommunity" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer advertise-ext-community command, you can configure routers to advertise the extended community attributes to a peer. By default, the extended community attribute is not advertised to any peer.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="discardExtCommunity" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer discard-ext-community command, you can discard the extended community attribute from the routing information of the specified peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="allowAsLoopEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer allow-as-loop command, you can configure the repeating times of local AS number.
By default, it is not allowed to repeat the local AS number.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                        <mandatory>true</mandatory>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="allowAsLoopLimit">
                <xs:annotation>
                    <xs:documentation>Specifies the repeating times of local AS number. The value is an integer ranging from 1 to 10. By default, the value is 1.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="10"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="keepAllRoutes" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer keep-all-routes command, you can save all the BGP routing updates from the specified peer or the peer group after the BGP connection is set up, even though those routes do not pass the configured ingress policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="nextHopConfigure" type="bgpcommNextHopCfg">
                <xs:annotation>
                    <xs:documentation>Using the peer next-hop-invariable command, you can configure PEs of different ASs not to change next hops when the PEs advertise routes to EBGP peers. When imported IGP routes are advertised to IBGP peers, next hops of the IGP routes are used. Using the peer next-hop-local command, you can configure IBGP to set its IP address as the next hop when advertising routes to the peer or peer group.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="preferredValue" default="0">
                <xs:annotation>
                    <xs:documentation>Specifies the preferred value assigned to routes. It is an integer that ranges from 0 to 65535.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="publicAsOnly" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer public-as-only command, you can configure BGP to send update packets without the private AS number. Only the public AS number is contained in the update packets. By default, the private AS number can be contained in the BGP update packets to be advertised.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeLimit">
                <xs:annotation>
                    <xs:documentation>Specifies the maximum number of routes allowed by peers. The value is an integer, with the minimum value as 1 and the maximum value determined by the license of the product.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                        <mandatory>true</mandatory>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="routeLimitPercent" default="75">
                <xs:annotation>
                    <xs:documentation>Specifies the percentage of the routes when the router starts to generate the warning message. The value is an integer ranging from 1 to 100. By default, it is 75.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="routeLimitType" type="bgpcommRouteLmtType" default="noparameter">
                <xs:annotation>
                    <xs:documentation>Alert-only: indicates that only the warning is produced when the number of the routes exceeds the limit. No route is received after the number of routes exceeds the limit.
idle-forever: indicates that when the number of the routes exceeds the limit, no automatic connection is set up until thereset bgp is used.
idle-timeout: indicates timeout timer for the automatically reestablishment of the connection. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeLimitIdleTimeout" default="1">
                <xs:annotation>
                    <xs:documentation>The value is an integer that ranges from 1 to 1200, in minutes. You can run the reset bgp command to reestablish connections before the timer times out.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="1200"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="rtUpdtInterval">
                <xs:annotation>
                    <xs:documentation>Specifies the minimum interval for sending BGP update packets. The value ranges from 0 to 600 seconds.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="600"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reflectClient" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer reflect-client command, you can configure the local router as the route reflector and the peer or peer group as the client of the route reflector.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="substituteAsEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer substitute-as command, you can substitute the AS number of the specified peer in the as-path with the local AS number.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="importRtPolicyName">
                <xs:annotation>
                    <xs:documentation>Specifies the id of import Route-Policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportRtPolicyName">
                <xs:annotation>
                    <xs:documentation>Specifies the id of export Route-Policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importPrefFiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the import prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importPref6FiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the import IPv6 prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportPrefFiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the export prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportPref6FiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the export IPv6 prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importAsPathFilter">
                <xs:annotation>
                    <xs:documentation>The import BGP route filtering policy that is based on the AS-Path for a peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="256"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportAsPathFilter">
                <xs:annotation>
                    <xs:documentation>The export BGP route filtering policy that is based on the AS-Path for a peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="256"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
			<xs:element name="importAclNameOrNum" type="aclNumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the import ACL policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="importAcl6NameOrNum" type="acl6NumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the import ACL6 policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="exportAclNameOrNum" type="aclNumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the export ACL policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="exportAcl6NameOrNum" type="acl6NumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the export ACL6 policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ipprefixOrfEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Specify outbound route filter capability based on ip-prefix</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="isNonstdIpprefixMod" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>If compatible Nonstandard routers</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="orftype">
                <xs:annotation>
                    <xs:documentation>Specify the type of orf</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort"/>
                </xs:simpleType>
            </xs:element>
            <xs:element name="orfMode" type="bgpcommonOrfMode" default="null">
                <xs:annotation>
                    <xs:documentation>Specifies then mode of orf,for example send and so on</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="soostring">
                <xs:annotation>
                    <xs:documentation>Specify the value of Site-of-Origin extended community</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="3"/>
                        <xs:maxLength value="21"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="defaultRtAdvEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer default-route-advertise command, you can advertise default routes to a peer.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultRtAdvPolicy">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the Route-Policy </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="defaultRtMatchMode" type="defaultRtMatchMode" default="null">
                <xs:annotation>
                    <xs:documentation>Conditionally advertise default-route if all routes match </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="validationDisable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>FlowSpec capablity. </xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="upeEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Specify peer as UPE.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="tnlPolicyName">
                <xs:annotation>
                    <xs:documentation>Specify a tunnel-policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="39"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="peerAFCraPres" type="bgp_bgpcomm_peerAFCraPres_type"/>
            <xs:element name="peerInfo" type="bgp_bgpcomm_bgpPeerInfo_type"/>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpVrfAFs_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="bgpVrfAF" type="bgp_bgpcomm_bgpVrfAF_type" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpVrfAF_type">
        <xs:annotation>
            <xs:documentation>IPv4 unicast Address family class for BGP instance</xs:documentation>
            <xs:appinfo>
                <autoDeleteChildren>true</autoDeleteChildren>
            </xs:appinfo>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="afType" type="bgpcommPrefixType" default="ipv4uni">
                <xs:annotation>
                    <xs:documentation>Address family</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maxLoadIbgpNum" default="1">
                <xs:annotation>
                    <xs:documentation>Specifies the maximum number of equal-cost IBGP routes.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="ibgpEcmpNexthopChanged" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Change nexthop when forming equal cost IBGP multiple paths</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maxLoadEbgpNum" default="1">
                <xs:annotation>
                    <xs:documentation>Specifies the maximum number of equal-cost EBGP routes.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="ebgpEcmpNexthopChanged" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Change nexthop when forming equal cost EBGP multiple paths</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maximumLoadBalance" default="1">
                <xs:annotation>
                    <xs:documentation>Specifies the maximum number of equal-cost routes in the BGP routing table. The value is an integer, with the minimum value as 1 and the maximum value determined by the license of the product.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="ecmpNexthopChanged" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Change nexthop when forming equal cost multiple paths</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="eibgpLoadBalan" default="0">
                <xs:annotation>
                    <xs:documentation>Specifies the maximum number of both EBGP and IBGP routes in the BGP routing table. The value is an integer, with the minimum value as 0 and the maximum value determined by the license of the product.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="eibgpEcmpNexthopChanged" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Change nexthop when forming equal cost EBGP and IBGP multiple paths</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultLocalPref" default="100">
                <xs:annotation>
                    <xs:documentation>Using the default local-preference command, you can configure the default local preference for BGP.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="defaultMed">
                <xs:annotation>
                    <xs:documentation>Using the default med command, you can set the default MED for BGP route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="defaultRtImportEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the default-route imported command, you can configure BGP to add the default route to the BGP routing table.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="summaryAutomatic" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the summary automatic command, you can enable the automatic aggregation for the locally imported routes. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="autoFrrEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using command auto-frr, you can enable BGP Auto FRR function. By default, BGP Auto FRR function is disable.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ribOnlyEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Capability for Forbidding BGP route forword to IP routing-table</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ribOnlyPolicyName">
                <xs:annotation>
                    <xs:documentation>The rib-only policy of the public bgp</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="asPathNeglect" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Configure BGP to ignore the AS-Path when selecting the optimal route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="medNoneAsMaximum" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the bestroute med-none-as-maximum command, you can enable the MED value to be taken as the maximum value, 4294967295. The command is used when BGP selects the optimal route but there is no MED value in route attributes.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routerIdNeglect" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the bestroute router-id-neglect command, you can configure BGP to ignore the route-id when selecting the optimal route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="igpMetricIgnore" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the bestroute igp-metric-neglect command, you can configure BGP to ignore the igp metric when selecting the optimal route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="alwaysCompareMed" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the compare-different-as-med command, you can compare the MED values of routes among peers from different ASs.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="determinMed" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Select best-MED route among routes advertised from the peering AS.</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="preferenceExternal" default="255">
                <xs:annotation>
                    <xs:documentation>Specifies the protocol preference of the EBGP external routes. External routes are the optimal routes learned from a peer outside the AS. It is an integer that ranges from 1 to 255.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="preferenceInternal" default="255">
                <xs:annotation>
                    <xs:documentation>Specifies the preference for IBGP internal routes. Internal routes are the optimal routes learned from other peers within the same AS. It is an integer that ranges from 1 to 255.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="preferenceLocal" default="255">
                <xs:annotation>
                    <xs:documentation>Specifies the protocol preference of the local BGP route. The local route refers to the route aggregated through aggregation commands, that is, summary automatic (automatic aggregation) and aggregate (manual aggregation). It is an integer that ranges from 1 to 255.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="prefrencePolicyName">
                <xs:annotation>
                    <xs:documentation>Specifies the index of the Route-Policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reflectBetweenClient" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>Using the reflect between-clients command, you can enable route reflection between clients.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="reflectorClusterId">
                <xs:annotation>
                    <xs:documentation>Specifies the cluster ID of the route reflector. The value ranges from 1 to 4294967295. It can also be identified in the IPv4 address format.
By default, each route reflector uses its router ID as the cluster ID.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reflectorClusterIpv4" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>Specifies the cluster ID of the route reflector. It can also be identified in the IPv4 address format.
By default, each route reflector uses its router ID as the cluster ID.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
		        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="rrFilterNumber">
                <xs:annotation>
                    <xs:documentation>Specifies the number of filter supported by the route-reflector group</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="199"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="policyVpnTarget" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>Using the policy vpn-target command, you can filter the VPNv4 routes received with VPN-Target attribute. Only the VPNv4 route whose export RT matches the import RT can be added to the routing table.By default, the VPN-Target filtering is enabled.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="nextHopSelDependType" type="bgpcommSelDependType" default="dependIp">
                <xs:annotation>
                    <xs:documentation>Specifies the Depend-type when selecting the route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="nhpRelayRoutePolicyName">
                <xs:annotation>
                    <xs:documentation>Specify the name of a routing policy. Nexthop iteration based on the routing policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="explicitNull" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Specified the type for IPv6 unicast by the command "apply-label explicit-null".</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ebgpIfSensitive" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The capability of reseting the EBGP session that is directly connected on the interface whose state becomes Down immediately </xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="tunnelSelectorName">
                <xs:annotation>
                    <xs:documentation>The tunnel selector name of the public bgp</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reflectChgPath" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>The reflect router can use export policy to change path attributes. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="vrfAFBriefInfo" type="bgp_bgpcomm_bgpVrfAFBriefInfoInfo_type"/>
            <xs:element name="peerGroupAFs" type="bgp_bgpcomm_peerGroupAFs_type"/>
            <xs:element name="peerAFs" type="bgp_bgpcomm_peerAFs_type"/>
            <xs:element name="importRoutes" type="bgp_bgpcomm_bgpImportRoutes_type"/>
            <xs:element name="networkRoutes" type="bgp_bgpcomm_bgpNetworkRoutes_type"/>
            <xs:element name="aggregateRoutes" type="bgp_bgpcomm_bgpAggregateRoutes_type"/>
            <xs:element name="dampRoutes" type="bgp_bgpcomm_bgpDampRoutes_type"/>
            <xs:element name="filterPolicys" type="bgp_bgpcomm_bgpFilterPolicys_type"/>
            <xs:element name="routingTables" type="bgp_bgpcomm_routingTables_type"/>
            <xs:element name="routingFlappingInfos" type="bgp_bgpcomm_routingFlappingInfos_type"/>
            <xs:element name="routingDampenedInfos" type="bgp_bgpcomm_routingDampenedInfos_type"/>
            <xs:element name="flowRoutingTables" type="bgp_bgpcomm_flowRoutingTables_type"/>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeerBfdSessionInfos_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="bgpPeerBfdSessionInfo" type="bgp_bgpcomm_bgpPeerBfdSessionInfo_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeerBfdSessionInfo_type">
        <xs:annotation>
            <xs:documentation>BGP peer bfd session info</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="remoteAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>The remote address</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localAdress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>The local address</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ifName" type="ifName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the interface through which the bfd packets are sent.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="txInterval">
                <xs:annotation>
                    <xs:documentation>Specifies the minimum interval for sending bfd packets. The value ranges from 0 to 1000 millisecond.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
			<xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="rxInterval">
                <xs:annotation>
                    <xs:documentation>Specifies the minimum interval for receiving bfd packets. The value ranges from 0 to 1000 millisecond.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
			<xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="multiplier">
                <xs:annotation>
                    <xs:documentation>The multiplier parameter of the bfd session.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sessionState" type="bgpBfdState">
                <xs:annotation>
                    <xs:documentation>The state of the bfd session.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="bfdGlobalEnable" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>The state of global bfd enable.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpImportRoutes_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="importRoute" type="bgp_bgpcomm_bgpImportRoute_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpImportRoute_type">
        <xs:annotation>
            <xs:documentation>Import route class</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="importProtocol" type="bgpcommImRouteProtocol">
                <xs:annotation>
                    <xs:documentation>Specifies the protocol from which routes are imported. At present, In the BGP-IPv4 unicast address family view and BGP-VPN instance view, the protocol can be IS-IS, OSPF, static, direct and RIP. In the BGP-IPv6 unicast address family view and BGP-VPN6 instance view, the protocol can be IS-IS, OSPFv3, static, direct, and RIPng.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="importProcessId" default="0">
                <xs:annotation>
                    <xs:documentation>Specifies the process ID if the protocol from routes are imported is IS-IS, OSPF, OSPFv3, RIP or RIPng.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importRoutePolicy">
                <xs:annotation>
                    <xs:documentation>Policy Id for import routes</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="med">
                <xs:annotation>
                    <xs:documentation>Specifies the MED metric of the imported route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpNetworkRoutes_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="networkRoute" type="bgp_bgpcomm_bgpNetworkRoute_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpNetworkRoute_type">
        <xs:annotation>
            <xs:documentation>Network route class</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="networkAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Specifies the IP network address advertised by BGP in dotted decimal notation.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maskLen">
                <xs:annotation>
                    <xs:documentation>Specifies the IP address mask. If the mask is not specified, the address is processed as the classful address.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="128"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="networkPolicy">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the Route-Policy that is used to the advertised routes . The name is a string of 1 to 40 characters.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpAggregateRoutes_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="aggregateRoute" type="bgp_bgpcomm_bgpAggregateRoute_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpAggregateRoute_type">
        <xs:annotation>
            <xs:documentation>Aggregate Route class</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="aggreAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Specifies the IP address of the aggregated route in dotted decimal notation.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maskLength">
                <xs:annotation>
                    <xs:documentation>Specifies mask length of the aggregated route</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="128"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="asSetEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Creates a route with the AS-SET.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="detailSuppressed" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Advertises only the aggregated routes.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="attributePolicy">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the attribute-policy for the aggregated routes. The name is a string of 1 to 40 characters.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="originPolicy">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the origin-policy that allows generating aggregated routes. The name is a string of 1 to 40 characters.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="suppressPolicy">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the suppress-policy that suppresses the advertisement of specified routes. The name is a string of 1 to 40 characters.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpDampRoutes_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="dampRoute" type="bgp_bgpcomm_bgpDampRoute_type" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpDampRoute_type">
        <xs:annotation>
            <xs:documentation>Enable BGP route flap damping or modify various BGP route flap damping parameters</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0">
            <xs:element name="halfLifeReachTime" default="15">
                <xs:annotation>
                    <xs:documentation>Specifies the half life reachable of a route in minute. The value is an integer ranges from 1 to 45. By default, it is 15.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="45"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reuse" default="750">
                <xs:annotation>
                    <xs:documentation>Specifies the threshold value for the route to be unsuppressed. If the penalty of the route is lower than the value, the route is reused. The value is an integer ranges from 1 to 20000. By default, it is 750.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="20000"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="suppress" default="2000">
                <xs:annotation>
                    <xs:documentation>Specifies the threshold value for the route to be suppressed. The route is not used when the penalty reaches the threshold. The value is an integer ranges from 1 to 20000. By default, it is 2000.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="20000"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="ceiling" default="16000">
                <xs:annotation>
                    <xs:documentation>Specifies the ceiling of the threshold. It must be greater than the value of suppress. The value is an integer ranges from 1001 to 20000. By default, it is 16000.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1001"/>
                        <xs:maxInclusive value="20000"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="dampPolicyName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the Route-Policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpFilterPolicys_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="filterPolicy" type="bgp_bgpcomm_bgpFilterPolicy_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpFilterPolicy_type">
        <xs:annotation>
            <xs:documentation>Filter-policy configure class for BGP view</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="filterProtocol" type="bgpcommFilterProtocol" default="noprotocol">
                <xs:annotation>
                    <xs:documentation>Indicates the protocol name. IPv4 supports direct, isis, ospf, rip, and static; IPv6 unicast supports direct, isis, ospfv3, ripng, and static, and IPv6 VPN instance and VPNv6 support direct, isis, ripng, and static.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="filterProcessId" default="0">
                <xs:annotation>
                    <xs:documentation>Specifies the ID of an eligible process. When protocol is direct or static, the process ID is not required.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="import" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Iimport policy.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="export" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Export policy.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="aclNameOrNum" type="aclNumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the import ACL policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="acl6NameOrNum" type="acl6NumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the import ACL6 policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="preFlt4Name">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the import prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="preFlt6Name">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the import IPv6 prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_routingTables_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="routingTable" type="bgp_bgpcomm_routingTable_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_routingTable_type">
        <xs:annotation>
            <xs:documentation>Display the information of the BGP routes</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="networkPrefix" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Network address in the BGP routing table</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="prefixMask" type="xs:unsignedByte">
                <xs:annotation>
                    <xs:documentation>Network  Mask.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeTypeFlag" type="bits32">
                <xs:annotation>
                    <xs:documentation>Route Type Flag.</xs:documentation>
                    <xs:appinfo>
                        <bits maskLen="32">
                            <bit position="0">ibgp</bit>
                            <bit position="1">ebgp</bit>
                            <bit position="2">network</bit>
                            <bit position="3">import</bit>
                            <bit position="4">auto-summary</bit>
                            <bit position="5">aggregate</bit>
                            <bit position="6">cpri</bit>
                            <bit position="7">pcri</bit>
                            <bit position="8">suppressed</bit>
                            <bit position="9">NHP-EMPTY</bit>
                            <bit position="10">NO-ADV</bit>
                            <bit position="11">local_cross</bit>
                            <bit position="12">remote_cross</bit>
                            <bit position="13">VD-BGP</bit>
                            <bit position="14">PATH_LOCAL</bit>
                            <bit position="15">PATH_GATEWAY</bit>
                            <bit position="16">policy_nopass</bit>
                            <bit position="17">supprenet</bit>
                            <bit position="18">dampened</bit>
                            <bit position="19">history</bit>
                            <bit position="20">select</bit>
                            <bit position="21">best</bit>
                            <bit position="22">backup</bit>
                            <bit position="23">attr_change</bit>
                            <bit position="24">NHLFE_CREATED</bit>
                            <bit position="25">ILM_CREATED</bit>
                            <bit position="26">NEXTHOP_CHANGE</bit>
                            <bit position="27">Invaild</bit>
                            <bit position="28">SOURCE_CHANGE</bit>
                            <bit position="29">IN_SELECTEDQ</bit>
                            <bit position="30">EXITIF_ERROR</bit>
                            <bit position="31">GROUP_HEAD</bit>
                        </bits>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="imTableId">
                <xs:annotation>
                    <xs:documentation>Import route from table index</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="nexthop" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Next Hop address through which the packet has to be sent</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="locPrf">
                <xs:annotation>
                    <xs:documentation>Local preference</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="prefVal">
                <xs:annotation>
                    <xs:documentation>Value preferred by the protocol</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="prefrence">
                <xs:annotation>
                    <xs:documentation>Indicates the preference of the BGP route </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="pathAs">
                <xs:annotation>
                    <xs:documentation>AS-Path number</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="origin" type="bgpcommOrigin">
                <xs:annotation>
                    <xs:documentation>The attributes of Origin</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="med">
                <xs:annotation>
                    <xs:documentation>Multi-Exit discriminator</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="flagString">
                <xs:annotation>
                    <xs:documentation>The route flag.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="rd">
                <xs:annotation>
                    <xs:documentation>route-distinguisher: specifies the RD.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="22"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="rtWorseReson" nillable="true">
                <xs:annotation>
                    <xs:documentation>The reason for route not preferred </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="peerString">
                <xs:annotation>
                    <xs:documentation>Send peer.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="time">
                <xs:annotation>
                    <xs:documentation>Specifies the route time stamp.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="community">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                    <xs:documentation>Community attributes</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="120"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="extCommunity">
                <xs:annotation>
                    <xs:documentation>Extent community</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="from" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>IP address of the neighbor that receive the routes</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ifName" type="ifName">
                <xs:annotation>
                    <xs:documentation>Interface name</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="originator" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Specifies the identifier of originator</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="clusterList">
                <xs:annotation>
                    <xs:documentation>Specifies the cluster ID of the route reflector</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="remoteRouteId" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>Specifies the identifier of peer route</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="relayNexthop" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Relay nexthop</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="relaytnlName">
                <xs:annotation>
                    <xs:documentation>Relay Type</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="19"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isAtomicAggre" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>BGP route produced is atomic-aggregate or not</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="aggregatorAs">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                    <xs:documentation>Aggregator as number.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
		    <xs:restriction base="xs:string">
		        <xs:maxLength value="11"/>
			<xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="aggregatorId" type="ipAddress">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                    <xs:documentation>Aggregator Id.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="inLabel">
                <xs:annotation>
                    <xs:documentation>In label</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="outLabel">
                <xs:annotation>
                    <xs:documentation>out label</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_flowRoutingTables_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="flowRoutingTable" type="bgp_bgpcomm_flowRoutingTable_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_flowRoutingTable_type">
        <xs:annotation>
            <xs:documentation>Display the information of the BGP routes</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="reIndex">
                <xs:annotation>
                    <xs:documentation>BGP Flow Specification route entry index</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isLocalRoute" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>The BGP Flow Specification route is local route or not</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localRouteName" nillable="true">
                <xs:annotation>
                    <xs:documentation>Local BGP Flow Specification route name.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="30"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="from" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The peer address of BGP FlowSpec  route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeTypeFlag" type="bits32">
                <xs:annotation>
                    <xs:documentation>Route Type Flag.</xs:documentation>
                    <xs:appinfo>
                        <bits maskLen="32">
                            <bit position="0">ibgp</bit>
                            <bit position="1">ebgp</bit>
                            <bit position="2">network</bit>
                            <bit position="3">import</bit>
                            <bit position="4">auto-summary</bit>
                            <bit position="5">aggregate</bit>
                            <bit position="6">cpri</bit>
                            <bit position="7">pcri</bit>
                            <bit position="8">suppressed</bit>
                            <bit position="9">NHP-EMPTY</bit>
                            <bit position="10">NO-ADV</bit>
                            <bit position="11">local_cross</bit>
                            <bit position="12">remote_cross</bit>
                            <bit position="13">VD-BGP</bit>
                            <bit position="14">PATH_LOCAL</bit>
                            <bit position="15">PATH_GATEWAY</bit>
                            <bit position="16">policy_nopass</bit>
                            <bit position="17">supprenet</bit>
                            <bit position="18">dampened</bit>
                            <bit position="19">history</bit>
                            <bit position="20">select</bit>
                            <bit position="21">best</bit>
                            <bit position="22">backup</bit>
                            <bit position="23">attr_change</bit>
                            <bit position="24">NHLFE_CREATED</bit>
                            <bit position="25">ILM_CREATED</bit>
                            <bit position="26">NEXTHOP_CHANGE</bit>
                            <bit position="27">Invaild</bit>
                            <bit position="28">SOURCE_CHANGE</bit>
                            <bit position="29">IN_SELECTEDQ</bit>
                            <bit position="30">EXITIF_ERROR</bit>
                            <bit position="31">GROUP_HEAD</bit>
                        </bits>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="peerRouterId" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The neighbour's router id. </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="order">
                <xs:annotation>
                    <xs:documentation>The order of route rules.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isApplyDeny" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Apply deny rule is support or  not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="isApplySample" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Apply sample rule is support or  not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="isApplyNextTerm" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Apply next term rule is support or  not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="remarkDscp" nillable="true">
                <xs:annotation>
                    <xs:documentation>Apply remark dscp rule is support or  not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="50"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="trafficRate" nillable="true">
                <xs:annotation>
                    <xs:documentation>Apply traffic rate rule is support or  not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="vpnTarget" nillable="true">
                <xs:annotation>
                    <xs:documentation>Apply redirect rule is support or  not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="22"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isReflectClient" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>The route is reflect client route or not.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="dscp" nillable="true">
                <xs:annotation>
                    <xs:documentation>The DSCP value of BGP Flow Specification route</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="destinationPrefix" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The destination prefix of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="desPrefixMaskLen">
                <xs:annotation>
                    <xs:documentation>The destination prefix mask length of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="32"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sourcePrefix" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The source prefix of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="srcPrefixMaskLen">
                <xs:annotation>
                    <xs:documentation>The source prefix mask length of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="32"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="protocol" nillable="true">
                <xs:annotation>
                    <xs:documentation>The IP protocal of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="port" nillable="true">
                <xs:annotation>
                    <xs:documentation>The port value of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="destinationPort" nillable="true">
                <xs:annotation>
                    <xs:documentation>The destination port of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sourcePort" nillable="true">
                <xs:annotation>
                    <xs:documentation>The source port value of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="icmpType" nillable="true">
                <xs:annotation>
                    <xs:documentation>The icmp type of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="icmpCode" nillable="true">
                <xs:annotation>
                    <xs:documentation>The icmp Code of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="tcpFlags" nillable="true">
                <xs:annotation>
                    <xs:documentation>The tcp flags of BGP Flow Specification route</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="packetlength" nillable="true">
                <xs:annotation>
                    <xs:documentation>The packet length of BGP Flow Specification route</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="fragmentType" nillable="true">
                <xs:annotation>
                    <xs:documentation>The fragment type of BGP Flow Specification route</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isUnkownRule" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>The rule is unkown or not in BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="med">
                <xs:annotation>
                    <xs:documentation>Multi-Exit discriminator</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="prefVal">
                <xs:annotation>
                    <xs:documentation>Value preferred by the protocol</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="localPrefrence">
                <xs:annotation>
                    <xs:documentation>Indicates the preference of the BGP route </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="origin" type="bgpcommOrigin">
                <xs:annotation>
                    <xs:documentation>origin attribute.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="originator" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The originator of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeDuration">
                <xs:annotation>
                    <xs:documentation>Route duration of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="flagString">
                <xs:annotation>
                    <xs:documentation>The flag string.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="community">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                    <xs:documentation>The community attributes of BGP Flow Specification route.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="120"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="extCommunity">
                <xs:annotation>
                    <xs:documentation>The extent community of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="clusterlist">
                <xs:annotation>
                    <xs:documentation>The cluster list of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="pathAs" nillable="true">
                <xs:annotation>
                    <xs:documentation>The path string of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="rtWorseReson" nillable="true">
                <xs:annotation>
                    <xs:documentation>The reason for route not preferred </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="peerString" nillable="true">
                <xs:annotation>
                    <xs:documentation>The peer string of BGP Flow Specification route.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="300"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="ruleNumber" type="xs:unsignedLong">
                <xs:annotation>
                    <xs:documentation>The total rule number of the specified reindex. </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="matchPackets" type="xs:unsignedLong">
                <xs:annotation>
                    <xs:documentation>The total matched packets of the specified reindex. </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="matchBytes" type="xs:unsignedLong">
                <xs:annotation>
                    <xs:documentation>The total matched bytes of the specified reindex. </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="matchPacketPer30Sec" type="xs:unsignedLong">
                <xs:annotation>
                    <xs:documentation>The total matched packets of the specified reindex per 30 seconds. </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="matchBytePer30Sec" type="xs:unsignedLong">
                <xs:annotation>
                    <xs:documentation>The total matched bytes of the specified reindex per 30 seconds. </xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeerInfos_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeerInfo_type">
        <xs:annotation>
            <xs:documentation>Display the information of the BGP peers</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="peerType" type="bgpcommPeerType">
                <xs:annotation>
                    <xs:documentation>Type of BGP link: IBGP Link and EBGP Link</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="version" type="xs:unsignedByte" fixed="4">
                <xs:annotation>
                    <xs:documentation>BGP protocol version</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="remoteRouterId" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>Router ID of the peer</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="bgpCurState" type="bgpcommPEERSTATE">
                <xs:annotation>
                    <xs:documentation>Status of the peer</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localPort" type="xs:unsignedInt" fixed="179">
                <xs:annotation>
                    <xs:documentation>Local port number.BGP uses TCP as the protocol of transport layer. The fixed port number is 179.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="remotePort">
                <xs:annotation>
                    <xs:documentation>Port number of the peer</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="currentEvent">
                <xs:annotation>
                    <xs:documentation>BGP current event</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="39"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="bgpLastState" type="bgpcommPEERSTATE">
                <xs:annotation>
                    <xs:documentation>Last status of BGP. Possible status: OpenConfirm, Idle, Connect, Active, OpenSent, and Established</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="upDownDuration">
                <xs:annotation>
                    <xs:documentation>Time during which the BGP session is in current state</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="49"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="messageSent">
                <xs:annotation>
                    <xs:documentation>Number of messages sent</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="messageReceived">
                <xs:annotation>
                    <xs:documentation>Number of messages received</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="outQueue">
                <xs:annotation>
                    <xs:documentation>Number of messages waiting  for senting  to that peer.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revHoldTime">
                <xs:annotation>
                    <xs:documentation>Holdtime period of the peer</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revLastKeepAliveTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>Elapsed time since the last BGP
        KEEPALIVE message was received from the peer</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="negoHoldTime">
                <xs:annotation>
                    <xs:documentation>Holdtime period negotiated by BGP peers</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="negoKeepAliveTime">
                <xs:annotation>
                    <xs:documentation>Keepalivetime period negotiated by BGP peers</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="21845"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revUpdateCount">
                <xs:annotation>
                    <xs:documentation>Number of Update messages received from neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revOpenCount">
                <xs:annotation>
                    <xs:documentation>Number of Open messages received from neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revKeepAliveCount">
                <xs:annotation>
                    <xs:documentation>Number of Keepalive messages received from neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revNotificationCount">
                <xs:annotation>
                    <xs:documentation>Number of Notification messages received from neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="revRouteRefreshCount">
                <xs:annotation>
                    <xs:documentation>Number of Route-refresh messages received from neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sentUpdateCount">
                <xs:annotation>
                    <xs:documentation>Number of Update messages sent to neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sentOpenCount">
                <xs:annotation>
                    <xs:documentation>Number of Open messages sent to neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sentKeepAliveCount">
                <xs:annotation>
                    <xs:documentation>Number of Keepalive messages sent to neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sentNotificationCount">
                <xs:annotation>
                    <xs:documentation>Number of Notification messages sent to neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sentRouteRefreshCount">
                <xs:annotation>
                    <xs:documentation>Number of Route-refresh messages sent to neighbors</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="sendGRCapability" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>The graceful restart capability of local</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="revRefreshCapability" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Route refresh capability supported by peers</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="revFourByteASCapability" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>The four byte as capability of neighbor</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="revSupportMPCapability" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Capability supported by peers</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="revGRCapability" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>The graceful restart capability of neighbor</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="prefRecv">
                <xs:annotation>
                    <xs:documentation>The number of received prefixes.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="activePrefRecv">
                <xs:annotation>
                    <xs:documentation>The number of active prefixes.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="prefAdvertised">
                <xs:annotation>
                    <xs:documentation>The number of advertised prefixes.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerLogInfos_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerLogInfo" type="bgp_bgpcomm_peerLogInfo_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerLogInfo_type">
        <xs:annotation>
            <xs:documentation>Displays BGP peer log information</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="stateEvent">
                <xs:annotation>
                    <xs:documentation>Current state of BGP</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="20"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="errorCode">
                <xs:annotation>
                    <xs:documentation>Log error code</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="errorSubCode">
                <xs:annotation>
                    <xs:documentation>Log suberror code</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="notification">
                <xs:annotation>
                    <xs:documentation>The notification text</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="logDateTime" type="xs:dateTime">
                <xs:annotation>
                    <xs:documentation>log time</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerBfd_type">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>BGP Peer BFD configure class</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="isBfdBlock" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Clear BFD configuration</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="multiplier" default="3">
                <xs:annotation>
                    <xs:documentation>Specify the detect multiplier</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="3"/>
                        <xs:maxInclusive value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isBfdEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Enable BFD</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="rxInterval">
                <xs:annotation>
                    <xs:documentation>Specify the minimum receive interval</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
		    <xs:minInclusive value="0"/>
		    <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="txInterval">
                <xs:annotation>
                    <xs:documentation>Specify the minimum transmit interval</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
		    <xs:minInclusive value="0"/>
		    <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isSingleHop" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Prefer to create a single hop BFD session for IBGP peer</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_routingFlappingInfos_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="routingFlappingInfo" type="bgp_bgpcomm_routingFlappingInfo_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_routingFlappingInfo_type">
        <xs:annotation>
            <xs:documentation>Displays BGP route dampening information</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="networkAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Displays the network address in the BGP routing table</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maskLength" type="xs:unsignedByte">
                <xs:annotation>
                    <xs:documentation>Address mask.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="fromPeer" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>IP address of the neighbor that receives routes</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="origin" type="bgpcommOrigin">
                <xs:annotation>
                    <xs:documentation>The attributes of Origin</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="asPath">
                <xs:annotation>
                    <xs:documentation>AS-Path number.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="10240"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="flaps">
                <xs:annotation>
                    <xs:documentation>Total number of route flapping</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reuseTime">
                <xs:annotation>
                    <xs:documentation>Reuse value</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="timeTick">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="durationTime">
                <xs:annotation>
                    <xs:documentation>Total duration since the flapping happens</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="timeTick">
                        <xs:maxInclusive value="4294967295"/>
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_routingDampenedInfos_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="routingDampenedInfo" type="bgp_bgpcomm_routingDampenedInfo_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_routingDampenedInfo_type">
        <xs:annotation>
            <xs:documentation>Displays BGP route dampened information</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="networkAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Displays the network address in the BGP routing table</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="maskLength" type="xs:unsignedByte">
                <xs:annotation>
                    <xs:documentation>Address mask.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="fromPeer" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>IP address of the neighbor that receives routes</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="origin" type="bgpcommOrigin">
                <xs:annotation>
                    <xs:documentation>The attributes of Origin</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="asPath">
                <xs:annotation>
                    <xs:documentation>AS-Path number.</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="10240"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reuseTime">
                <xs:annotation>
                    <xs:documentation>Reuse value</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="timeTick">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:simpleType name="bgp_bgpcomm_bgpVrf_vrfName_Type">
        <xs:restriction base="xs:string">
            <xs:maxLength value="31"/>
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="bgp_bgpcomm_bgpPeerGroup_type">
        <xs:annotation>
            <xs:documentation>BGP Peer Group configure class</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="afType" type="bgpcommGroupAddrFamily" default="public">
                <xs:annotation>
                    <xs:documentation>Address family</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="groupName" type="bgp_bgpcomm_bgpPeerGroup_groupName_Type">
                <xs:annotation>
                    <xs:documentation>group name</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="groupType" type="bgpcommPeerType" default="ibgp">
                <xs:annotation>
                    <xs:documentation>group type</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="groupAs">
                <xs:annotation>
                    <xs:documentation>Specifies the AS number of the peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="11"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="description">
                <xs:annotation>
                    <xs:documentation>specifies the description. The description is a string of letters or figures. The value ranges from 1 to 80 characters without spaces.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="80"/>
                        <xs:pattern value="([^?]*)"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="fakeAs">
                <xs:annotation>
                    <xs:documentation>Specifies the fake AS number of the peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="11"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="dualAs" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>The capability flag of dual-as</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="conventional" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>The capability flag of conventional</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeRefresh" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The capability flag of route refresh</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="fourByteAs" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The capabilityflag of fourByteAs</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="isIgnore" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Forbid a router to set up the session with the spcefied peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localIfName" type="ifName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the source interface through which the BGP packets are sent, and the source address with which the BGP connection is established.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="localIfAddress" type="ipAddress">
                <xs:annotation>
                    <xs:documentation>Specifies the ipv4 address of the source interface through which the BGP packets are sent, and the source address with which the BGP connection is established.</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ebgpMaxHop" default="1">
                <xs:annotation>
                    <xs:documentation>Configure BGP to set up the EBGP connection with the peer on the indirect network.specifies the maximum number of hops. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="validTtlHops">
                <xs:annotation>
                    <xs:documentation>Specifies the number of TTL hops to be checked. It is an integer ranging from 1 to 255. The default value is 255.If the value is configured as hops, the valid TTL range of the detected packet is [255 - hops + 1, 255].</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="connectMode" type="bgpcommPeerConnectMode">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Specifies the connect mode with the specified peer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="isLogChange" type="xs:boolean" default="true">
                <xs:annotation>
                    <xs:documentation>The flag of enable BGP to log any session state and event for the specific peer or the specified peer group.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="pswdType" type="bgpcommPasswordType" default="null">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Specifies the password type with the specified peer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="pswdCipherText" type="passwordExtend">
                <xs:annotation>
                    <xs:documentation>Specifies the password in the text. It is a string of 1 to 255 characters without any space.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="keepAliveTime" default="60">
                <xs:annotation>
                    <xs:documentation>Specifies the Keepalive interval for a peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="21845"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="holdTime" default="180">
                <xs:annotation>
                    <xs:documentation>Specifies the Holdtime interval for a peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="keyChainName">
                <xs:annotation>
                    <xs:documentation>The keyChain name</xs:documentation>
                    <xs:appinfo>
                        <key>false</key>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="bgp_bgpcomm_bgpKeyChain_keyChain_Type"/>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
            <xs:element name="trackingEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Fast detect the unreachable destined for the peer and reset the session.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="trackDelayTime" default="0">
                <xs:annotation>
                    <xs:documentation>Specify the delay to reset the session, in seconds.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="connRetryTime" default="32">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Value of connect-retry timer(seconds).</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="peerMembers" type="bgp_bgpcomm_peerMembers_type"/>
            <xs:element name="peerGroupBfd" type="bgp_bgpcomm_peerGroupBfd_type"/>
        </xs:choice>
        <xs:attribute name="operation" type="editOperation" use="optional"/>
        <xs:attribute name="difference" type="configDifference" use="optional"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpPeerGroups_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="bgpPeerGroup" type="bgp_bgpcomm_bgpPeerGroup_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="bgp_bgpcomm_bgpPeerGroup_groupName_Type">
        <xs:restriction base="xs:string">
            <xs:maxLength value="47"/>
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="bgp_bgpcomm_peerGroupAFs_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerGroupAF" type="bgp_bgpcomm_peerGroupAF_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerGroupAF_type">
        <xs:annotation>
            <xs:documentation> Peer Group Configure class for ipv4 unicast</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="groupName" type="bgp_bgpcomm_bgpPeerGroup_groupName_Type">
                <xs:annotation>
                    <xs:documentation>groupName</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="groupType" type="bgpcommPeerType" default="ibgp">
                <xs:annotation>
                    <xs:documentation>group type</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <key>true</key>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="advertiseCommunity" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer advertise-community command, you can configure routers to advertise the community attributes to a peer. By default, the community attribute is not advertised to any peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="advertiseExtCommunity" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer advertise-ext-community command, you can configure routers to advertise the extended community attributes to a peer. By default, the extended community attribute is not advertised to any peer.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="discardExtCommunity" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer discard-ext-community command, you can discard the extended community attribute from the routing information of the specified peer</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="allowAsLoopEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer allow-as-loop command, you can configure the repeating times of local AS number.
By default, it is not allowed to repeat the local AS number.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <mandatory>true</mandatory>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="allowAsLoopLimit">
                <xs:annotation>
                    <xs:documentation>Specifies the repeating times of local AS number. The value is an integer ranging from 1 to 10. By default, the value is 1.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="10"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="keepAllRoutes" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer keep-all-routes command, you can save all the BGP routing updates from the specified peer or the peer group after the BGP connection is set up, even though those routes do not pass the configured ingress policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="nextHopConfigure" type="bgpcommNextHopCfg" default="null">
                <xs:annotation>
                    <xs:documentation>Using the peer next-hop-invariable command, you can configure PEs of different ASs not to change next hops when the PEs advertise routes to EBGP peers. When imported IGP routes are advertised to IBGP peers, next hops of the IGP routes are used. Using the peer next-hop-local command, you can configure IBGP to set its IP address as the next hop when advertising routes to the peer or peer group.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="preferredValue" default="0">
                <xs:annotation>
                    <xs:documentation>Specifies the preferred value assigned to routes. It is an integer that ranges from 0 to 65535.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="65535"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="publicAsOnly" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer public-as-only command, you can configure BGP to send update packets without the private AS number. Only the public AS number is contained in the update packets. By default, the private AS number can be contained in the BGP update packets to be advertised.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeLimit">
                <xs:annotation>
                    <xs:documentation>Specifies the maximum number of routes allowed by peers. The value is an integer, with the minimum value as 1 and the maximum value determined by the license of the product.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                        <mandatory>true</mandatory>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="routeLimitPercent" default="75">
                <xs:annotation>
                    <xs:documentation>Specifies the percentage of the routes when the router starts to generate the warning message. The value is an integer ranging from 1 to 100. By default, it is 75.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedByte">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="routeLimitType" type="bgpcommRouteLmtType" default="noparameter">
                <xs:annotation>
                    <xs:documentation>Alert-only: indicates that only the warning is produced when the number of the routes exceeds the limit. No route is received after the number of routes exceeds the limit.
idle-forever: indicates that when the number of the routes exceeds the limit, no automatic connection is set up until thereset bgp is used.
idle-timeout: indicates timeout timer for the automatically reestablishment of the connection. </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeLimitIdleTimeout" default="1">
                <xs:annotation>
                    <xs:documentation>The value is an integer that ranges from 1 to 1200, in minutes. You can run the reset bgp command to reestablish connections before the timer times out.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="1200"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="rtUpdtInterval">
                <xs:annotation>
                    <xs:documentation>Specifies the minimum interval for sending BGP update packets. The value ranges from 0 to 600 seconds.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="600"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="reflectClient" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer reflect-client command, you can configure the local router as the route reflector and the peer or peer group as the client of the route reflector.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="substituteAsEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer substitute-as command, you can substitute the AS number of the specified peer in the as-path with the local AS number.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="importRtPolicyName">
                <xs:annotation>
                    <xs:documentation>Specifies the id of import Route-Policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportRtPolicyName">
                <xs:annotation>
                    <xs:documentation>Specifies the id of export Route-Policy</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="40"/>
                        <xs:minLength value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importPrefFiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the import prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importPref6FiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the import IPv6 prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportPrefFiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the export prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportPref6FiltName">
                <xs:annotation>
                    <xs:documentation>Specifies the number of the export IPv6 prefix list</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="169"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="importAsPathFilter">
                <xs:annotation>
                    <xs:documentation>The import BGP route filtering policy that is based on the AS-Path for a peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="256"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="exportAsPathFilter">
                <xs:annotation>
                    <xs:documentation>The export BGP route filtering policy that is based on the AS-Path for a peer </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="256"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
			<xs:element name="importAclNameOrNum" type="aclNumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the import ACL policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="importAcl6NameOrNum" type="acl6NumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the import ACL6 policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="exportAclNameOrNum" type="aclNumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the export ACL policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
			<xs:element name="exportAcl6NameOrNum" type="acl6NumOrName">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the export ACL6 policy.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="ipprefixOrfEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Specify outbound route filter capability based on ip-prefix</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="isNonstdIpprefixMod" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>If compatible Nonstandard routers</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="orftype">
                <xs:annotation>
                    <xs:documentation>Specify the type of orf</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedShort"/>
                </xs:simpleType>
            </xs:element>
            <xs:element name="orfMode" type="bgpcommonOrfMode" default="null">
                <xs:annotation>
                    <xs:documentation>Specifies then mode of orf,for example send and so on</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="soostring">
                <xs:annotation>
                    <xs:documentation>Specify the value of Site-of-Origin extended community</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="3"/>
                        <xs:maxLength value="21"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="defaultRtAdvEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer default-route-advertise command, you can advertise default routes to a peer.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultRtAdvPolicy">
                <xs:annotation>
                    <xs:documentation>Specifies the name of the Route-Policy </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="40"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="defaultRtMatchMode" type="defaultRtMatchMode" default="null">
                <xs:annotation>
                    <xs:documentation>Conditionally advertise default-route if all routes match </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="labelRouteCapability" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Using the peer label-route-capability command, you can enable BGP to send labeled routes to the specified peer or the peer group.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="checkTunnelReachable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Checks whether the tunnel is reachable when an imported route is advertised to a BGP peer as a labeled route.</xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="upeEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                    <xs:documentation>Specify peer as UPE.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="peerGroupAFCraPres" type="bgp_bgpcomm_peerGroupAFCraPres_type"/>
            <xs:element name="peerAFMembers" type="bgp_bgpcomm_peerAFMembers_type"/>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerMembers_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerMember" type="bgp_bgpcomm_peerMember_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerAFMembers_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerAFMember" type="bgp_bgpcomm_peerAFMember_type" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerMember_type">
        <xs:annotation>
            <xs:documentation>Display the peer members information of the BGP group</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="peerSession" nillable="true">
                <xs:annotation>
                    <xs:documentation>peerSession</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="512"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerAFMember_type">
        <xs:annotation>
            <xs:documentation>Display the information of the BGP peers</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="peer" nillable="true">
                <xs:annotation>
                    <xs:documentation>peer</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="512"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerGroupBfd_type">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>BGP Peer BFD Group configure class</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="multiplier" default="3">
                <xs:annotation>
                    <xs:documentation>Specify the detect multiplier</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="3"/>
                        <xs:maxInclusive value="50"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isBfdEnable" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Enable BFD</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="rxInterval">
                <xs:annotation>
                    <xs:documentation>Specify the minimum receive interval</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
		    <xs:minInclusive value="0"/>
		    <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="txInterval">
                <xs:annotation>
                    <xs:documentation>Specify the minimum transmit interval</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
		    <xs:minInclusive value="0"/>
		    <xs:maxInclusive value="4294967295"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="isSingleHop" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation>Prefer to create a single hop BFD session for IBGP peer</xs:documentation>
                    <xs:appinfo>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_bgpVrfAFBriefInfoInfo_type">
        <xs:annotation>
            <xs:documentation>Display the brief information of the instance address family</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="peerNum" type="xs:unsignedInt">
                <xs:annotation>
                    <xs:documentation>peerNum</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="routeNum" type="xs:unsignedInt">
                <xs:annotation>
                    <xs:documentation>routeNum</xs:documentation>
                    <xs:appinfo>
                        <access>readOnly</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerAFCraPres_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerAFCraPre" type="bgp_bgpcomm_peerAFCraPre_type" maxOccurs="4"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerAFCraPre_type">
        <xs:annotation>
            <xs:documentation>save cra info</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice maxOccurs="4">
            <xs:element name="defaultRtAddress" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The prfix of the first default route.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultRtMask">
                <xs:annotation>
                    <xs:documentation>The masklen of the first default route.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="32"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerGroupAFCra_type">
        <xs:annotation>
            <xs:documentation>save cra match info</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice minOccurs="0">
            <xs:element name="defaultRtMatchMode" type="defaultRtMatchMode" default="null">
                <xs:annotation>
                    <xs:documentation>Conditionally advertise default-route if all routes match </xs:documentation>
                    <xs:appinfo>
                        <access>readWrite</access>
                        <allowNull>true</allowNull>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerGroupAFCraPres_type">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="peerGroupAFCraPre" type="bgp_bgpcomm_peerGroupAFCraPre_type" maxOccurs="4"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="bgp_bgpcomm_peerGroupAFCraPre_type">
        <xs:annotation>
            <xs:documentation>save cra info</xs:documentation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:choice maxOccurs="4">
            <xs:element name="defaultRtAddress" type="ipv4Address">
                <xs:annotation>
                    <xs:documentation>The prfix of the first default route.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
            </xs:element>
            <xs:element name="defaultRtMask">
                <xs:annotation>
                    <xs:documentation>The masklen of the first default route.</xs:documentation>
                    <xs:appinfo>
                        <key>true</key>
                        <access>readCreate</access>
                    </xs:appinfo>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:unsignedInt">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="32"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:choice>
        <xs:attributeGroup ref="objectAttributeGroup"/>
    </xs:complexType>
    <xs:simpleType name="bgp_bgpcomm_bgpKeyChain_keyChain_Type">
        <xs:restriction base="xs:string">
            <xs:maxLength value="47"/>
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
